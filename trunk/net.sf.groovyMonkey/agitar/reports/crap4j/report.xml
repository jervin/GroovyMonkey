<crap_result>
  <project>
    C:\workspace-plugins\net.sf.groovyMonkey
  </project>
  <project_id>
    1205960023864
  </project_id>
  <timestamp>
    3/19/08 3:53 PM
  </timestamp>
  <classDirectories>
    <classDirectory>
      C:\workspace-plugins\net.sf.groovyMonkey\bin
    </classDirectory>
  </classDirectories>
  <testClassDirectories>
    <testClassDirectory>
      C:\workspace-plugins\net.sf.groovyMonkey\bin
    </testClassDirectory>
  </testClassDirectories>
  <sourceDirectories>
    <sourceDirectory>
      C:\workspace-plugins\net.sf.groovyMonkey\src
    </sourceDirectory>
  </sourceDirectories>
  <libClasspaths>
    <libClasspath>
      C:\net.sf.groovyMonkey
    </libClasspath>
    <libClasspath>
      C:\net.sf.groovyMonkey\lib\commons-collections-3.2.jar
    </libClasspath>
    <libClasspath>
      C:\net.sf.groovyMonkey\lib\commons-io-1.2.jar
    </libClasspath>
    <libClasspath>
      C:\net.sf.groovyMonkey\lib\bsf.jar
    </libClasspath>
    <libClasspath>
      C:\net.sf.groovyMonkey\lib\commons-lang-2.1.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.core.runtime_3.4.0.v20080201.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.osgi_3.4.0.v20080205.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.equinox.common_3.4.0.v20080201.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.core.jobs_3.3.100.v20071207.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.core.runtime.compatibility.registry_3.2.200.v20070717\runtime_registry_compatibility.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.equinox.registry_3.4.0.v20080201.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.equinox.preferences_3.2.200.v20080201.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.core.contenttype_3.3.0.v20080201.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.equinox.app_1.0.100.v20080201.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.ui_3.4.0.I20080207-1300.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.swt_3.4.0.v3428a.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.swt.win32.win32.x86_3.4.0.v3428.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.jface_3.4.0.I20080205-0010.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.core.commands_3.3.100.I20071120-0800.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.ui.workbench_3.4.0.I20080205-0010.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.ui.ide_3.4.0.I20080204-0800.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.core.resources_3.4.0.v20080205.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.update.core_3.2.100.v20071113a.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.update.ui_3.2.100.v20070615.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-antlr.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-apache-bcel.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-apache-bsf.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-apache-log4j.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-apache-oro.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-apache-regexp.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-apache-resolver.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-commons-logging.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-commons-net.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-jai.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-javamail.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-jdepend.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-jmf.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-jsch.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-junit.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-launcher.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-netrexx.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-nodeps.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-starteam.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-stylebook.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-swing.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-trax.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.apache.ant_1.7.0.v200711021030\lib\ant-weblogic.jar
    </libClasspath>
    <libClasspath>
      C:\target\eclipse-WTP-all-in-one-sdk-R3.0M5-win32-20080304-0640\eclipse\plugins\org.eclipse.ui.views_3.2.200.I20080129-0800.jar
    </libClasspath>
  </libClasspaths>
  <stats>
    <name>
      Method Crap Stats
    </name>
    <totalCrap>
      4956.00
    </totalCrap>
    <crap>
      8.96
    </crap>
    <median>
      2.00
    </median>
    <average>
      8.96
    </average>
    <stdDev>
      29.69
    </stdDev>
    <methodCount>
      553
    </methodCount>
    <crapMethodCount>
      37
    </crapMethodCount>
    <crapMethodPercent>
      6.69
    </crapMethodPercent>
    <crapLoad>
      280
    </crapLoad>
    <crapThreshold>
      30
    </crapThreshold>
    <globalAverage>
      4.62
    </globalAverage>
    <globalCraploadAverage>
      -1.00
    </globalCraploadAverage>
    <globalCrapMethodAverage>
      -1.00
    </globalCrapMethodAverage>
    <globalTotalMethodAverage>
      -1.00
    </globalTotalMethodAverage>
    <globalAverageDiff>
      4.35
    </globalAverageDiff>
    <globalCraploadAverageDiff>
      281.00
    </globalCraploadAverageDiff>
    <globalCrapMethodAverageDiff>
      38.00
    </globalCrapMethodAverageDiff>
    <globalTotalMethodAverageDiff>
      554.00
    </globalTotalMethodAverageDiff>
    <shareStatsUrl>
      http://www.crap4j.org/benchmark/stats/new?stat[project_hash]=1205960023864&amp;stat[project_url]=net.sf.groovyMonkey&amp;stat[crap]=6.69&amp;stat[crap_load]=280&amp;stat[crap_methods]=37&amp;stat[total_methods]=553&amp;stat[ones]=0&amp;stat[twos]=384&amp;stat[fours]=62&amp;stat[eights]=51&amp;stat[sixteens]=27&amp;stat[thirtytwos]=18&amp;stat[sixtyfours]=6&amp;stat[one28s]=4&amp;stat[two56s]=1
    </shareStatsUrl>
    <histogram>
      <hist>
        <place>
          one
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
      <hist>
        <place>
          two
        </place>
        <value>
          384
        </value>
        <height>
          170.00px
        </height>
      </hist>
      <hist>
        <place>
          four
        </place>
        <value>
          62
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          eight
        </place>
        <value>
          51
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          sixteen
        </place>
        <value>
          27
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          thirtytwo
        </place>
        <value>
          18
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          sixtyfour
        </place>
        <value>
          6
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          one28
        </place>
        <value>
          4
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          two56
        </place>
        <value>
          1
        </value>
        <height>
          28.00px
        </height>
      </hist>
    </histogram>
  </stats>
  <methods>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/ClassLoader;[Lorg/osgi/framework/Bundle;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.ClassLoader, org.osgi.framework.Bundle[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lorg/osgi/framework/Bundle;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.osgi.framework.Bundle[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        findClass
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/Class&lt;*&gt;;
      </methodSignature>
      <fullMethod>
        protected  java.lang.Class&lt;?&gt; findClass(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        loadClass
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/Class&lt;*&gt;;
      </methodSignature>
      <fullMethod>
        public  java.lang.Class&lt;?&gt; loadClass(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        DOMDescriptor
      </className>
      <methodName>
        compareTo
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)I
      </methodSignature>
      <fullMethod>
        public  int compareTo(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        DOMDescriptor
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        DOMDescriptor
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ErrorDialog;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.ErrorDialog)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog$1
      </className>
      <methodName>
        widgetDefaultSelected
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/events/SelectionEvent;)V
      </methodSignature>
      <fullMethod>
        public  void widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog$1
      </className>
      <methodName>
        widgetSelected
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/events/SelectionEvent;)V
      </methodSignature>
      <fullMethod>
        public  void widgetSelected(org.eclipse.swt.events.SelectionEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog$StringPrintWriter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog$StringPrintWriter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog$StringPrintWriter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog$StringPrintWriter
      </className>
      <methodName>
        getString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ErrorDialog;)V
      </methodSignature>
      <fullMethod>
        static  void access$0(net.sf.groovyMonkey.ErrorDialog)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        configureShell
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Shell;)V
      </methodSignature>
      <fullMethod>
        protected  void configureShell(org.eclipse.swt.widgets.Shell)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        createButtonsForButtonBar
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Composite;)V
      </methodSignature>
      <fullMethod>
        protected  void createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        createDialogArea
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;
      </methodSignature>
      <fullMethod>
        protected  org.eclipse.swt.widgets.Control createDialogArea(org.eclipse.swt.widgets.Composite)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        openError
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;)I
      </methodSignature>
      <fullMethod>
        public static  int openError(org.eclipse.swt.widgets.Shell, java.lang.String, java.lang.String, org.eclipse.core.runtime.IStatus)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        openError
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)I
      </methodSignature>
      <fullMethod>
        public static  int openError(org.eclipse.swt.widgets.Shell, java.lang.String, java.lang.String, org.eclipse.core.runtime.IStatus, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        populateList
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/List;)V
      </methodSignature>
      <fullMethod>
        private  void populateList(org.eclipse.swt.widgets.List)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/GroovyMonkeyPlugin;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.GroovyMonkeyPlugin)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        bundle
      </methodName>
      <methodSignature>
        ()Lorg/osgi/framework/Bundle;
      </methodSignature>
      <fullMethod>
        public static  org.osgi.framework.Bundle bundle()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        bundleDescription
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.BundleDescription bundleDescription()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        bundleDescription
      </methodName>
      <methodSignature>
        (J)Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.BundleDescription bundleDescription(long)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        bundleDescription
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.BundleDescription bundleDescription(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        context
      </methodName>
      <methodSignature>
        ()Lorg/osgi/framework/BundleContext;
      </methodSignature>
      <fullMethod>
        public static  org.osgi.framework.BundleContext context()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getAllRequiredBundles
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllRequiredBundles()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getAllRequiredBundles
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllRequiredBundles(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getBundleDescription
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.BundleDescription getBundleDescription()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getBundleDescription
      </methodName>
      <methodSignature>
        (J)Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.BundleDescription getBundleDescription(long)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getBundleDescription
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.BundleDescription getBundleDescription(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getDefault
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/GroovyMonkeyPlugin;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.GroovyMonkeyPlugin getDefault()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getImageDescriptor
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getPlatformAdmin
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/osgi/service/resolver/PlatformAdmin;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.PlatformAdmin getPlatformAdmin()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getScriptStore
      </methodName>
      <methodSignature>
        ()Ljava/util/Map&lt;Ljava/lang/String;Lnet/sf/groovyMonkey/ScriptMetadata;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;java.lang.String, net.sf.groovyMonkey.ScriptMetadata&gt; getScriptStore()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logError
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void logError(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logError
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logError(java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logException
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logException(java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logExceptionInfo
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logExceptionInfo(java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logExceptionInfo
      </methodName>
      <methodSignature>
        (Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logExceptionInfo(java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logExceptionWarning
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logExceptionWarning(java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logExceptionWarning
      </methodName>
      <methodSignature>
        (Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logExceptionWarning(java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logInfo
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void logInfo(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logInfo
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logInfo(java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logWarning
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void logWarning(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        logWarning
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void logWarning(java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        platformAdmin
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/osgi/service/resolver/PlatformAdmin;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.osgi.service.resolver.PlatformAdmin platformAdmin()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        registry
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/jface/resource/ImageRegistry;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.jface.resource.ImageRegistry registry()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        scriptStore
      </methodName>
      <methodSignature>
        ()Ljava/util/Map&lt;Ljava/lang/String;Lnet/sf/groovyMonkey/ScriptMetadata;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;java.lang.String, net.sf.groovyMonkey.ScriptMetadata&gt; scriptStore()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        start
      </methodName>
      <methodSignature>
        (Lorg/osgi/framework/BundleContext;)V
      </methodSignature>
      <fullMethod>
        public  void start(org.osgi.framework.BundleContext)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;ILjava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(net.sf.groovyMonkey.Tags$Type, int, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;ILjava/lang/String;I)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(net.sf.groovyMonkey.Tags$Type, int, java.lang.String, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;ILjava/lang/String;III)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(net.sf.groovyMonkey.Tags$Type, int, java.lang.String, int, int, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        charEnd
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int charEnd()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        charStart
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int charStart()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        error
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;Ljava/lang/String;[I)Lnet/sf/groovyMonkey/Marker;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.Marker error(net.sf.groovyMonkey.Tags$Type, java.lang.String, int[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        getCharEnd
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getCharEnd()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        getCharStart
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getCharStart()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        getLineNumber
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getLineNumber()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        getMessage
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getMessage()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        getSeverity
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getSeverity()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        getTag
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/Tags$Type;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.Tags$Type getTag()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        info
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;Ljava/lang/String;[I)Lnet/sf/groovyMonkey/Marker;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.Marker info(net.sf.groovyMonkey.Tags$Type, java.lang.String, int[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        lineNumber
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int lineNumber()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        message
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String message()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        severity
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int severity()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        tag
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/Tags$Type;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.Tags$Type tag()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        warning
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;Ljava/lang/String;[I)Lnet/sf/groovyMonkey/Marker;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.Marker warning(net.sf.groovyMonkey.Tags$Type, java.lang.String, int[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/ClassLoader;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.ClassLoader)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (Ljava/lang/ClassLoader;)V
      </methodSignature>
      <fullMethod>
        public  void add(java.lang.ClassLoader)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        getLoaders
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Ljava/lang/ClassLoader;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;java.lang.ClassLoader&gt; getLoaders()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        invoke
      </methodName>
      <methodSignature>
        (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        private  java.lang.Object invoke(java.lang.ClassLoader, java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        invoke
      </methodName>
      <methodSignature>
        (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        private  java.lang.Object invoke(java.lang.ClassLoader, java.lang.String, java.lang.String, boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/RunMonkeyScript;Ljava/lang/String;[Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.RunMonkeyScript, java.lang.String, java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript$1
      </className>
      <methodName>
        runInUIThread
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.runtime.IStatus runInUIThread(org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/RunMonkeyScript;Ljava/lang/String;[Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.RunMonkeyScript, java.lang.String, java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript$2
      </className>
      <methodName>
        runInWorkspace
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.runtime.IStatus runInWorkspace(org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/RunMonkeyScript;Ljava/lang/String;[Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.RunMonkeyScript, java.lang.String, java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript$3
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.runtime.IStatus run(org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;Z)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.core.resources.IFile, java.util.Map&lt;java.lang.String, java.lang.Object&gt;, boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;Lorg/eclipse/ui/IWorkbenchWindow;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.core.resources.IFile, org.eclipse.ui.IWorkbenchWindow)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;Lorg/eclipse/ui/IWorkbenchWindow;Z)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.core.resources.IFile, org.eclipse.ui.IWorkbenchWindow, boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;Z)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.core.resources.IFile, boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        (Z)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object run(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        runJob
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        private  java.lang.Object runJob()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        runUIJob
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        private  java.lang.Object runUIJob()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        runWorkspaceJob
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        private  java.lang.Object runWorkspaceJob()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$1
      </className>
      <methodName>
        runInWorkspace
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.runtime.IStatus runInWorkspace(org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;ZLnet/sf/groovyMonkey/ScriptMetadata;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(java.lang.String, org.eclipse.core.resources.IFile, boolean, net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Lnet/sf/groovyMonkey/ScriptMetadata$URLtoPluginMap;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.ScriptMetadata, net.sf.groovyMonkey.ScriptMetadata$URLtoPluginMap)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$3
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$4
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;[Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.ScriptMetadata, java.lang.String[], java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$4
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$ExecModes
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$ExecModes
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;I)V
      </methodSignature>
      <fullMethod>
        private  void &lt;init&gt;(java.lang.String, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$ExecModes
      </className>
      <methodName>
        valueOf
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lnet/sf/groovyMonkey/ScriptMetadata$ExecModes;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.ScriptMetadata$ExecModes valueOf(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$ExecModes
      </className>
      <methodName>
        values
      </methodName>
      <methodSignature>
        ()[Lnet/sf/groovyMonkey/ScriptMetadata$ExecModes;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.ScriptMetadata$ExecModes[] values()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$JobModes
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$JobModes
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;I)V
      </methodSignature>
      <fullMethod>
        private  void &lt;init&gt;(java.lang.String, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$JobModes
      </className>
      <methodName>
        valueOf
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lnet/sf/groovyMonkey/ScriptMetadata$JobModes;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.ScriptMetadata$JobModes valueOf(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$JobModes
      </className>
      <methodName>
        values
      </methodName>
      <methodSignature>
        ()[Lnet/sf/groovyMonkey/ScriptMetadata$JobModes;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.ScriptMetadata$JobModes[] values()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$URLtoPluginMap
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Lnet/sf/groovyMonkey/ScriptMetadata$URLtoPluginMap;)V
      </methodSignature>
      <fullMethod>
        static  void access$0(net.sf.groovyMonkey.ScriptMetadata, net.sf.groovyMonkey.ScriptMetadata$URLtoPluginMap)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        static  java.lang.String access$1(net.sf.groovyMonkey.ScriptMetadata, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        addDOM
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/DOMDescriptor;)V
      </methodSignature>
      <fullMethod>
        public  void addDOM(net.sf.groovyMonkey.DOMDescriptor)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        addInclude
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addInclude(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        addIncludedBundle
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addIncludedBundle(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        file
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/core/resources/IFile;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.resources.IFile file()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getDOMs
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Lnet/sf/groovyMonkey/DOMDescriptor;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;net.sf.groovyMonkey.DOMDescriptor&gt; getDOMs()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getExecMode
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/ScriptMetadata$ExecModes;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.ScriptMetadata$ExecModes getExecMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getFile
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/core/resources/IFile;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.resources.IFile getFile()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getIncludedBundles
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.Set&lt;java.lang.String&gt; getIncludedBundles()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getIncludes
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.Set&lt;java.lang.String&gt; getIncludes()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getJobMode
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/ScriptMetadata$JobModes;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.ScriptMetadata$JobModes getJobMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getKudos
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getKudos()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getLang
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getLang()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getLicense
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getLicense()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getMarkers
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Lnet/sf/groovyMonkey/Marker;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.Set&lt;net.sf.groovyMonkey.Marker&gt; getMarkers()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getMenuName
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getMenuName()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getScriptMetadata
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)Lnet/sf/groovyMonkey/ScriptMetadata;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.ScriptMetadata getScriptMetadata(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getSubscriptions
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Lnet/sf/groovyMonkey/Subscription;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;net.sf.groovyMonkey.Subscription&gt; getSubscriptions()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        header
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String header()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        isBackground
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isBackground()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        isForeground
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isForeground()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        markers
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Lnet/sf/groovyMonkey/Marker;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.Set&lt;net.sf.groovyMonkey.Marker&gt; markers()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        refreshScriptMetadata
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;Lnet/sf/groovyMonkey/ScriptMetadata;)V
      </methodSignature>
      <fullMethod>
        public static  void refreshScriptMetadata(org.eclipse.core.resources.IFile, net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        scriptPath
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String scriptPath()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setFile
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public  void setFile(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setKudos
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setKudos(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setLicense
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setLicense(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setMenuName
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setMenuName(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setScriptPath
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setScriptPath(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        stripIllegalChars
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String stripIllegalChars(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription$ResourceChangeListener$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Subscription$ResourceChangeListener;[Ljava/lang/Boolean;Ljava/util/regex/Pattern;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.Subscription$ResourceChangeListener, java.lang.Boolean[], java.util.regex.Pattern)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription$ResourceChangeListener
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(net.sf.groovyMonkey.ScriptMetadata, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(net.sf.groovyMonkey.ScriptMetadata, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription
      </className>
      <methodName>
        getFilter
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getFilter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription
      </className>
      <methodName>
        subscribe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void subscribe()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription
      </className>
      <methodName>
        unsubscribe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void unsubscribe()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags$Type
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags$Type
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;I)V
      </methodSignature>
      <fullMethod>
        private  void &lt;init&gt;(java.lang.String, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags$Type
      </className>
      <methodName>
        valueOf
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lnet/sf/groovyMonkey/Tags$Type;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.Tags$Type valueOf(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags$Type
      </className>
      <methodName>
        values
      </methodName>
      <methodSignature>
        ()[Lnet/sf/groovyMonkey/Tags$Type;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.Tags$Type[] values()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags
      </className>
      <methodName>
        get
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static final  java.lang.String get(net.sf.groovyMonkey.Tags$Type)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags
      </className>
      <methodName>
        getTag
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static final  java.lang.String getTag(net.sf.groovyMonkey.Tags$Type)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Tags
      </className>
      <methodName>
        getTagText
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static final  java.lang.String getTagText(net.sf.groovyMonkey.Tags$Type)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/UpdateMonkeyActionsResourceChangeListener;[Ljava/lang/Boolean;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.UpdateMonkeyActionsResourceChangeListener, java.lang.Boolean[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener$1
      </className>
      <methodName>
        foundAChange
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void foundAChange()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/UpdateMonkeyActionsResourceChangeListener;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.UpdateMonkeyActionsResourceChangeListener)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(org.eclipse.ui.IWorkbenchWindow)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener$3
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/UpdateMonkeyActionsResourceChangeListener;Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        static  void access$0(net.sf.groovyMonkey.UpdateMonkeyActionsResourceChangeListener, java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/UpdateMonkeyActionsResourceChangeListener;Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        static  void access$1(net.sf.groovyMonkey.UpdateMonkeyActionsResourceChangeListener, java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        getMetadataFrom
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)Lnet/sf/groovyMonkey/ScriptMetadata;
      </methodSignature>
      <fullMethod>
        private  net.sf.groovyMonkey.ScriptMetadata getMetadataFrom(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        CreateGroovyMonkeyExamplesAction
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        CreateGroovyMonkeyExamplesAction
      </className>
      <methodName>
        dispose
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void dispose()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        CreateGroovyMonkeyExamplesAction
      </className>
      <methodName>
        getExampleScripts
      </methodName>
      <methodSignature>
        (Lorg/osgi/framework/Bundle;)Ljava/util/List&lt;Ljava/net/URL;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;java.net.URL&gt; getExampleScripts(org.osgi.framework.Bundle)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        CreateGroovyMonkeyExamplesAction
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;)V
      </methodSignature>
      <fullMethod>
        public  void init(org.eclipse.ui.IWorkbenchWindow)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        CreateGroovyMonkeyExamplesAction
      </className>
      <methodName>
        selectionChanged
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;Lorg/eclipse/jface/viewers/ISelection;)V
      </methodSignature>
      <fullMethod>
        public  void selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction$TextAndRTF
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        collapseEscapedNewlines
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String collapseEscapedNewlines(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        dispose
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void dispose()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        getTextFromClipboard
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/actions/PasteScriptFromClipboardAction$TextAndRTF;
      </methodSignature>
      <fullMethod>
        private  net.sf.groovyMonkey.actions.PasteScriptFromClipboardAction$TextAndRTF getTextFromClipboard()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;)V
      </methodSignature>
      <fullMethod>
        public  void init(org.eclipse.ui.IWorkbenchWindow)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        selectionChanged
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;Lorg/eclipse/jface/viewers/ISelection;)V
      </methodSignature>
      <fullMethod>
        public  void selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        setActivePart
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;Lorg/eclipse/ui/IWorkbenchPart;)V
      </methodSignature>
      <fullMethod>
        public  void setActivePart(org.eclipse.jface.action.IAction, org.eclipse.ui.IWorkbenchPart)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        decorateText
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        protected  java.lang.String decorateText(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        dispose
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void dispose()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;)V
      </methodSignature>
      <fullMethod>
        public  void init(org.eclipse.ui.IWorkbenchWindow)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        selectionChanged
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;Lorg/eclipse/jface/viewers/ISelection;)V
      </methodSignature>
      <fullMethod>
        public  void selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        setActivePart
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;Lorg/eclipse/ui/IWorkbenchPart;)V
      </methodSignature>
      <fullMethod>
        public  void setActivePart(org.eclipse.jface.action.IAction, org.eclipse.ui.IWorkbenchPart)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScriptForBlogger
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScriptForBlogger
      </className>
      <methodName>
        decorateText
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        protected  java.lang.String decorateText(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScriptForEmail
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScriptForEmail
      </className>
      <methodName>
        breakIntoShorterLines
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String breakIntoShorterLines(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScriptForEmail
      </className>
      <methodName>
        decorateText
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        protected  java.lang.String decorateText(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScriptForWiki
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScriptForWiki
      </className>
      <methodName>
        decorateText
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        protected  java.lang.String decorateText(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction;Ljava/lang/String;Lorg/eclipse/ui/IWorkbenchWindow;Lorg/eclipse/jface/action/IAction;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction, java.lang.String, org.eclipse.ui.IWorkbenchWindow, org.eclipse.jface.action.IAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$1
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction;Ljava/lang/String;Lorg/eclipse/ui/IWorkbenchWindow;Lorg/eclipse/jface/action/IAction;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction, java.lang.String, org.eclipse.ui.IWorkbenchWindow, org.eclipse.jface.action.IAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$2
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction;Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction, java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$3
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$4
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction;Ljava/lang/String;Lnet/sf/groovyMonkey/RunMonkeyScript;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction, java.lang.String, net.sf.groovyMonkey.RunMonkeyScript)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$4
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$Association
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$Association
      </className>
      <methodName>
        compareTo
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)I
      </methodSignature>
      <fullMethod>
        public  int compareTo(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$MonkeyMenuStruct
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        static  int access$0()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        static  void access$1(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        dispose
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void dispose()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;)V
      </methodSignature>
      <fullMethod>
        public  void init(org.eclipse.ui.IWorkbenchWindow)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;)V
      </methodSignature>
      <fullMethod>
        public  void run(org.eclipse.jface.action.IAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        selectionChanged
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;Lorg/eclipse/jface/viewers/ISelection;)V
      </methodSignature>
      <fullMethod>
        public  void selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        SelectScriptPathDialog$Validator
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        SelectScriptPathDialog
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Shell;Lorg/eclipse/jface/viewers/ILabelProvider;Lorg/eclipse/jface/viewers/ITreeContentProvider;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.swt.widgets.Shell, org.eclipse.jface.viewers.ILabelProvider, org.eclipse.jface.viewers.ITreeContentProvider, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        SelectScriptPathDialog
      </className>
      <methodName>
        getResult
      </methodName>
      <methodSignature>
        ()[Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  [] getResult()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        SelectScriptPathDialog
      </className>
      <methodName>
        modifyText
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/events/ModifyEvent;)V
      </methodSignature>
      <fullMethod>
        public  void modifyText(org.eclipse.swt.events.ModifyEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        BSFFunctionsDOMFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        BSFFunctionsDOMFactory
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        MetadataDOMFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        MetadataDOMFactory
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        MonitorDOM
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        MonitorDOM
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Lorg/eclipse/core/runtime/IExtensionPoint;Ljava/util/Map;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.ScriptMetadata, org.eclipse.core.runtime.IExtensionPoint, java.util.Map)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities$1
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(java.lang.String, java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities$2
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Lorg/eclipse/core/runtime/IExtensionPoint;Ljava/util/Map;)V
      </methodSignature>
      <fullMethod>
        static  void access$0(net.sf.groovyMonkey.ScriptMetadata, org.eclipse.core.runtime.IExtensionPoint, java.util.Map)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        activePage
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/ui/IWorkbenchPage;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.ui.IWorkbenchPage activePage()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        activeWindow
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/ui/IWorkbenchWindow;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.ui.IWorkbenchWindow activeWindow()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        contents
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String contents(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        error
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void error(java.lang.String, java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getDOMExtensionPoint
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/core/runtime/IExtensionPoint;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.core.runtime.IExtensionPoint getDOMExtensionPoint()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        imageDescriptor
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/jface/resource/ImageDescriptor;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.jface.resource.ImageDescriptor imageDescriptor(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        isMonkeyScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Z
      </methodSignature>
      <fullMethod>
        public static  boolean isMonkeyScript(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        isMonkeyScript
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)Z
      </methodSignature>
      <fullMethod>
        public static  boolean isMonkeyScript(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        isMonkeyScript
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IPath;)Z
      </methodSignature>
      <fullMethod>
        public static  boolean isMonkeyScript(org.eclipse.core.runtime.IPath)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        readLines
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/List&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;java.lang.String&gt; readLines(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        shell
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/swt/widgets/Shell;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.swt.widgets.Shell shell()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        warning
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void warning(java.lang.String, java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        bundle
      </methodName>
      <methodSignature>
        ()Lorg/osgi/framework/Bundle;
      </methodSignature>
      <fullMethod>
        public  org.osgi.framework.Bundle bundle()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        bundleDescription
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.osgi.service.resolver.BundleDescription bundleDescription()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        bundleDescription
      </methodName>
      <methodSignature>
        (J)Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.osgi.service.resolver.BundleDescription bundleDescription(long)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        bundleDescription
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/osgi/service/resolver/BundleDescription;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.osgi.service.resolver.BundleDescription bundleDescription(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        context
      </methodName>
      <methodSignature>
        ()Lorg/osgi/framework/BundleContext;
      </methodSignature>
      <fullMethod>
        public  org.osgi.framework.BundleContext context()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        getAllReexportedBundles
      </methodName>
      <methodSignature>
        (J)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllReexportedBundles(long)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        getAllReexportedBundles
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllReexportedBundles(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        getAllRequiredBundles
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllRequiredBundles()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        getAllRequiredBundles
      </methodName>
      <methodSignature>
        (J)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllRequiredBundles(long)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        getAllRequiredBundles
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllRequiredBundles(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOM
      </className>
      <methodName>
        platformAdmin
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/osgi/service/resolver/PlatformAdmin;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.osgi.service.resolver.PlatformAdmin platformAdmin()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOMFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.bundle
      </package>
      <className>
        BundleDOMFactory
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        File
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResource;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.core.resources.IResource)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        File
      </className>
      <methodName>
        getEclipseObject
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/core/resources/IFile;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.resources.IFile getEclipseObject()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        Line
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;ILnet/sf/groovyMonkey/dom/resources/File;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, int, net.sf.groovyMonkey.dom.resources.File)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        Line
      </className>
      <methodName>
        addMyTask
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addMyTask(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        Line
      </className>
      <methodName>
        getLineNumber
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getLineNumber()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        Line
      </className>
      <methodName>
        getString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        Resources
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        ResourcesDOMFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        ResourcesDOMFactory
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        file
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/core/resources/IFile;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.resources.IFile file(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object runScript(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object runScript(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.Object&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object runScript(java.lang.String, java.util.Map&lt;java.lang.String, java.lang.Object&gt;, org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;Ljava/lang/String;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object runScript(org.eclipse.ui.IWorkbenchWindow, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;Ljava/lang/String;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object runScript(org.eclipse.ui.IWorkbenchWindow, java.lang.String, java.util.Map&lt;java.lang.String, java.lang.Object&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;Ljava/lang/String;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object runScript(org.eclipse.ui.IWorkbenchWindow, java.lang.String, java.util.Map&lt;java.lang.String, java.lang.Object&gt;, org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOMFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOMFactory
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.window
      </package>
      <className>
        WindowDOMFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.workspace
      </package>
      <className>
        WorkspaceDOMFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.workspace
      </package>
      <className>
        WorkspaceDOMFactory
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/lang/MonkeyScript;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.lang.MonkeyScript)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$1
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$1
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/MonkeyClassLoader;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.MonkeyClassLoader run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/List;Lnet/sf/groovyMonkey/MonkeyClassLoader;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(java.util.List, net.sf.groovyMonkey.MonkeyClassLoader)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$2
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$2
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Ljava/net/URLClassLoader;
      </methodSignature>
      <fullMethod>
        public  java.net.URLClassLoader run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/MonkeyClassLoader;Ljava/util/List;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.MonkeyClassLoader, java.util.List)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$3
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript$3
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Lnet/sf/groovyMonkey/BundleClassLoaderAdapter;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.BundleClassLoaderAdapter run()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/resources/IFile;Z)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.String, org.eclipse.core.resources.IFile, boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        addSlash
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String addSlash(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        getIncludedBundles
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;)Ljava/util/List&lt;Lorg/osgi/framework/Bundle;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;org.osgi.framework.Bundle&gt; getIncludedBundles(net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        getScript
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/core/resources/IFile;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.resources.IFile getScript()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        script
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/core/resources/IFile;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.resources.IFile script()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        setToString
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void setToString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        workspaceURI
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String workspaceURI()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        clearCachedScripts
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public synchronized  void clearCachedScripts()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        getName
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getName()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        isLang
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Z
      </methodSignature>
      <fullMethod>
        public  boolean isLang(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        name
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String name()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        runner
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;)Lnet/sf/groovyMonkey/lang/IMonkeyScript;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.lang.IMonkeyScript runner(net.sf.groovyMonkey.ScriptMetadata, java.util.Map&lt;java.lang.String, java.lang.Object&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.preferences
      </package>
      <className>
        GroovyMonkeyPreferencePage
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.preferences
      </package>
      <className>
        GroovyMonkeyPreferencePage
      </className>
      <methodName>
        createFieldEditors
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void createFieldEditors()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.preferences
      </package>
      <className>
        GroovyMonkeyPreferencePage
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbench;)V
      </methodSignature>
      <fullMethod>
        public  void init(org.eclipse.ui.IWorkbench)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.preferences
      </package>
      <className>
        PreferenceInitializer
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.preferences
      </package>
      <className>
        PreferenceInitializer
      </className>
      <methodName>
        initializeDefaultPreferences
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void initializeDefaultPreferences()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/util/Transformer;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.util.Transformer)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (ITT;)V
      </methodSignature>
      <fullMethod>
        public  void add(int, T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (TT;)Z
      </methodSignature>
      <fullMethod>
        public  boolean add(T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        contains
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean contains(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        indexOf
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)I
      </methodSignature>
      <fullMethod>
        public  int indexOf(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        lastIndexOf
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)I
      </methodSignature>
      <fullMethod>
        public  int lastIndexOf(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        remove
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean remove(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        (ITT;)TT;
      </methodSignature>
      <fullMethod>
        public  T set(int, T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$2
      </className>
      <methodName>
        transform
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object transform(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$2
      </className>
      <methodName>
        transform
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String transform(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        array
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; array&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        caseless
      </methodName>
      <methodSignature>
        (Ljava/util/List&lt;*&gt;;)Ljava/util/List&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;java.lang.String&gt; caseless(java.util.List&lt;?&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        caseless
      </methodName>
      <methodSignature>
        &lt;E:Ljava/lang/Object;&gt;([TE;)Ljava/util/List&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;java.lang.String&gt; caseless&lt;E&gt;(E[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        linked
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; linked&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        list
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; list&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        listAdd
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/List&lt;TT;&gt;;[TT;)V
      </methodSignature>
      <fullMethod>
        public static  void listAdd&lt;T&gt;(java.util.List&lt;T&gt;, T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        transformed
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Lnet/sf/groovyMonkey/util/Transformer&lt;TT;&gt;;Ljava/util/List&lt;*&gt;;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; transformed&lt;T&gt;(net.sf.groovyMonkey.util.Transformer&lt;T&gt;, java.util.List&lt;?&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        treeList
      </methodName>
      <methodSignature>
        &lt;T::Ljava/lang/Comparable&lt;TT;&gt;;&gt;([TT;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; treeList&lt;T extends java.lang.Comparable&lt;T&gt;&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        vector
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; vector&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil$Entry
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (TK;TV;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(K, V)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil$Entry
      </className>
      <methodName>
        getKey
      </methodName>
      <methodSignature>
        ()TK;
      </methodSignature>
      <fullMethod>
        public  K getKey()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil$Entry
      </className>
      <methodName>
        getValue
      </methodName>
      <methodSignature>
        ()TV;
      </methodSignature>
      <fullMethod>
        public  V getValue()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil$Entry
      </className>
      <methodName>
        key
      </methodName>
      <methodSignature>
        ()TK;
      </methodSignature>
      <fullMethod>
        public  K key()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil$Entry
      </className>
      <methodName>
        setValue
      </methodName>
      <methodSignature>
        (TV;)TV;
      </methodSignature>
      <fullMethod>
        public  V setValue(V)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil$Entry
      </className>
      <methodName>
        value
      </methodName>
      <methodSignature>
        ()TV;
      </methodSignature>
      <fullMethod>
        public  V value()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        hashMap
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;([Ljava/util/Map$Entry&lt;TK;TV;&gt;;)Ljava/util/Map&lt;TK;TV;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;K, V&gt; hashMap&lt;K, V&gt;(java.util.Map$Entry&lt;K, V&gt;[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        linkedMap
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;([Ljava/util/Map$Entry&lt;TK;TV;&gt;;)Ljava/util/Map&lt;TK;TV;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;K, V&gt; linkedMap&lt;K, V&gt;(java.util.Map$Entry&lt;K, V&gt;[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        map
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;([Ljava/util/Map$Entry&lt;TK;TV;&gt;;)Ljava/util/Map&lt;TK;TV;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;K, V&gt; map&lt;K, V&gt;(java.util.Map$Entry&lt;K, V&gt;[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        mapAdd
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;(Ljava/util/Map&lt;TK;TV;&gt;;[Ljava/util/Map$Entry&lt;TK;TV;&gt;;)V
      </methodSignature>
      <fullMethod>
        public static  void mapAdd&lt;K, V&gt;(java.util.Map&lt;K, V&gt;, java.util.Map$Entry&lt;K, V&gt;[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        table
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;([Ljava/util/Map$Entry&lt;TK;TV;&gt;;)Ljava/util/Map&lt;TK;TV;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;K, V&gt; table&lt;K, V&gt;(java.util.Map$Entry&lt;K, V&gt;[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        treeMap
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;([Ljava/util/Map$Entry&lt;TK;TV;&gt;;)Ljava/util/Map&lt;TK;TV;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;K, V&gt; treeMap&lt;K, V&gt;(java.util.Map$Entry&lt;K, V&gt;[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        hashSet
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; hashSet&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        linkedSet
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; linkedSet&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; set&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        setAdd
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Set&lt;TT;&gt;;[TT;)V
      </methodSignature>
      <fullMethod>
        public static  void setAdd&lt;T&gt;(java.util.Set&lt;T&gt;, T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        treeSet
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;([TT;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; treeSet&lt;T&gt;(T[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        StringUtil
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/util/TreeList;I)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.util.TreeList, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (TT;)V
      </methodSignature>
      <fullMethod>
        public  void add(T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void add(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        hasNext
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean hasNext()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        hasPrevious
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean hasPrevious()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        next
      </methodName>
      <methodSignature>
        ()TT;
      </methodSignature>
      <fullMethod>
        public  T next()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        next
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object next()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        nextIndex
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int nextIndex()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        previous
      </methodName>
      <methodSignature>
        ()TT;
      </methodSignature>
      <fullMethod>
        public  T previous()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        previous
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object previous()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        previousIndex
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int previousIndex()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        remove
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void remove()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        (TT;)V
      </methodSignature>
      <fullMethod>
        public  void set(T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$1
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void set(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$ComparableSerializableComparator
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList$ComparableSerializableComparator
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/util/TreeList$ComparableSerializableComparator;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(net.sf.groovyMonkey.util.TreeList$ComparableSerializableComparator)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/Collection&lt;TT;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/util/SerializableComparator&lt;TT;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(net.sf.groovyMonkey.util.SerializableComparator&lt;T&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        access$5
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/util/TreeList;I)Ljava/util/ListIterator;
      </methodSignature>
      <fullMethod>
        static  java.util.ListIterator access$5(net.sf.groovyMonkey.util.TreeList, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        access$6
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void access$6()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (ITT;)V
      </methodSignature>
      <fullMethod>
        public final  void add(int, T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (ILjava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void add(int, java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean add(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        addAll
      </methodName>
      <methodSignature>
        (ILjava/util/Collection&lt;+TT;&gt;;)Z
      </methodSignature>
      <fullMethod>
        public final  boolean addAll(int, java.util.Collection&lt;? extends T&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        addFirst
      </methodName>
      <methodSignature>
        (TT;)V
      </methodSignature>
      <fullMethod>
        public final  void addFirst(T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        addFirst
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void addFirst(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        addLast
      </methodName>
      <methodSignature>
        (TT;)V
      </methodSignature>
      <fullMethod>
        public final  void addLast(T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        addLast
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void addLast(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        comparator
      </methodName>
      <methodSignature>
        ()Ljava/util/Comparator&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public final  java.util.Comparator&lt;T&gt; comparator()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        error
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private static  void error()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        fastIndexOf
      </methodName>
      <methodSignature>
        (TT;)I
      </methodSignature>
      <fullMethod>
        public final  int fastIndexOf(T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        listIterator
      </methodName>
      <methodSignature>
        (I)Ljava/util/ListIterator&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public final  java.util.ListIterator&lt;T&gt; listIterator(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        (ITT;)TT;
      </methodSignature>
      <fullMethod>
        public final  T set(int, T)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        (ILjava/lang/Object;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object set(int, java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        buttonPressed
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        protected  void buttonPressed(int)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        close
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean close()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        copyToClipboard
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void copyToClipboard()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        createDetailsButton
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Composite;)V
      </methodSignature>
      <fullMethod>
        protected  void createDetailsButton(org.eclipse.swt.widgets.Composite)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        createDropDownList
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/List;
      </methodSignature>
      <fullMethod>
        protected  org.eclipse.swt.widgets.List createDropDownList(org.eclipse.swt.widgets.Composite)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        open
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int open()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        toggleDetailsArea
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void toggleDetailsArea()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        addRequiredBundles
      </methodName>
      <methodSignature>
        (Ljava/util/Set&lt;Ljava/lang/String;&gt;;Lorg/eclipse/osgi/service/resolver/BundleDescription;)V
      </methodSignature>
      <fullMethod>
        private static  void addRequiredBundles(java.util.Set&lt;java.lang.String&gt;, org.eclipse.osgi.service.resolver.BundleDescription)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        addScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lnet/sf/groovyMonkey/ScriptMetadata;)V
      </methodSignature>
      <fullMethod>
        public static  void addScript(java.lang.String, net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        clearScripts
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public static  void clearScripts()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        earlyStartup
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void earlyStartup()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getAllReexportedBundles
      </methodName>
      <methodSignature>
        (J)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllReexportedBundles(long)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getAllRequiredBundles
      </methodName>
      <methodSignature>
        (J)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllRequiredBundles(long)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        icon
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/swt/graphics/Image;
      </methodSignature>
      <fullMethod>
        public static  org.eclipse.swt.graphics.Image icon(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        log
      </methodName>
      <methodSignature>
        (ILjava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public static  void log(int, java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        removeScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void removeScript(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        stop
      </methodName>
      <methodSignature>
        (Lorg/osgi/framework/BundleContext;)V
      </methodSignature>
      <fullMethod>
        public  void stop(org.osgi.framework.BundleContext)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        getResource
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/net/URL;
      </methodSignature>
      <fullMethod>
        public  java.net.URL getResource(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;Lorg/eclipse/ui/IWorkbenchWindow;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;Z)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.core.resources.IFile, org.eclipse.ui.IWorkbenchWindow, java.util.Map&lt;java.lang.String, java.lang.Object&gt;, boolean)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        error
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        private  void error(java.lang.String, java.lang.String, java.lang.Throwable)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        error
      </methodName>
      <methodSignature>
        (Ljava/lang/Throwable;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        private  void error(java.lang.Throwable, java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IProgressMonitor;)Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object runScript(org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        setMetadata
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void setMetadata()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$URLtoPluginMap
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/DOMDescriptor;)V
      </methodSignature>
      <fullMethod>
         void add(net.sf.groovyMonkey.DOMDescriptor)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$URLtoPluginMap
      </className>
      <methodName>
        getPluginNames
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
         java.lang.String getPluginNames(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        openEditor
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void openEditor()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setLang
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setLang(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setScriptPath
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void setScriptPath()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        subscribe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void subscribe()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        unsubscribe
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void unsubscribe()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        createTheMonkeyMenu
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public static  void createTheMonkeyMenu()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        processNewOrChangedScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        private  void processNewOrChangedScript(java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        processRemovedScript
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        private  void processRemovedScript(java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        resourceChanged
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResourceChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void resourceChanged(org.eclipse.core.resources.IResourceChangeEvent)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        getFolderForPath
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/core/resources/IFolder;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.core.resources.IFolder getFolderForPath(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        getProject
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lorg/eclipse/core/resources/IProject;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.core.resources.IProject getProject(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$Association
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        SelectScriptPathDialog
      </className>
      <methodName>
        createDialogArea
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;
      </methodSignature>
      <fullMethod>
        protected  org.eclipse.swt.widgets.Control createDialogArea(org.eclipse.swt.widgets.Composite)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getContents
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String getContents(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        key
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String key(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        openEditor
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public static  void openEditor(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        readLines
      </methodName>
      <methodSignature>
        (Ljava/io/Reader;)Ljava/util/List&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;java.lang.String&gt; readLines(java.io.Reader)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        showDialog
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;I)V
      </methodSignature>
      <fullMethod>
        private static  void showDialog(java.lang.String, java.lang.String, java.lang.Throwable, int)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        File
      </className>
      <methodName>
        getLines
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Lnet/sf/groovyMonkey/dom/resources/Line;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.List&lt;net.sf.groovyMonkey.dom.resources.Line&gt; getLines()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        Resources
      </className>
      <methodName>
        filesMatching
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)[Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  [] filesMatching(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        asyncExec
      </methodName>
      <methodSignature>
        (Ljava/lang/Runnable;)V
      </methodSignature>
      <fullMethod>
        public  void asyncExec(java.lang.Runnable)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.runner
      </package>
      <className>
        RunnerDOM
      </className>
      <methodName>
        syncExec
      </methodName>
      <methodSignature>
        (Ljava/lang/Runnable;)V
      </methodSignature>
      <fullMethod>
        public  void syncExec(java.lang.Runnable)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.window
      </package>
      <className>
        WindowDOMFactory
      </className>
      <methodName>
        getDOMroot
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object getDOMroot()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        changed
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public synchronized  void changed(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        getRunner
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;)Lnet/sf/groovyMonkey/lang/IMonkeyScript;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.lang.IMonkeyScript getRunner(net.sf.groovyMonkey.ScriptMetadata, java.util.Map&lt;java.lang.String, java.lang.Object&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScriptFactoryAbstract
      </className>
      <methodName>
        runners
      </methodName>
      <methodSignature>
        ()Ljava/util/Map&lt;Ljava/lang/String;Lnet/sf/groovyMonkey/lang/IMonkeyScript;&gt;;
      </methodSignature>
      <fullMethod>
        private synchronized  java.util.Map&lt;java.lang.String, net.sf.groovyMonkey.lang.IMonkeyScript&gt; runners()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        addAll
      </methodName>
      <methodSignature>
        (ILjava/util/Collection&lt;+TT;&gt;;)Z
      </methodSignature>
      <fullMethod>
        public  boolean addAll(int, java.util.Collection&lt;? extends T&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        addAll
      </methodName>
      <methodSignature>
        (Ljava/util/Collection&lt;+TT;&gt;;)Z
      </methodSignature>
      <fullMethod>
        public  boolean addAll(java.util.Collection&lt;? extends T&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        containsAll
      </methodName>
      <methodSignature>
        (Ljava/util/Collection&lt;*&gt;;)Z
      </methodSignature>
      <fullMethod>
        public  boolean containsAll(java.util.Collection&lt;?&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        removeAll
      </methodName>
      <methodSignature>
        (Ljava/util/Collection&lt;*&gt;;)Z
      </methodSignature>
      <fullMethod>
        public  boolean removeAll(java.util.Collection&lt;?&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil$1
      </className>
      <methodName>
        retainAll
      </methodName>
      <methodSignature>
        (Ljava/util/Collection&lt;*&gt;;)Z
      </methodSignature>
      <fullMethod>
        public  boolean retainAll(java.util.Collection&lt;?&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/List&lt;TT;&gt;;[TT;)V
      </methodSignature>
      <fullMethod>
        public static  void add&lt;T&gt;(java.util.List&lt;T&gt;, T[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        transformed
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Lnet/sf/groovyMonkey/util/Transformer&lt;TT;&gt;;[Ljava/lang/Object;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; transformed&lt;T&gt;(net.sf.groovyMonkey.util.Transformer&lt;T&gt;, java.lang.Object[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;(Ljava/util/Map&lt;TK;TV;&gt;;[Ljava/util/Map$Entry&lt;TK;TV;&gt;;)V
      </methodSignature>
      <fullMethod>
        public static  void add&lt;K, V&gt;(java.util.Map&lt;K, V&gt;, java.util.Map$Entry&lt;K, V&gt;[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Set&lt;TT;&gt;;[TT;)V
      </methodSignature>
      <fullMethod>
        public static  void add&lt;T&gt;(java.util.Set&lt;T&gt;, T[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        addAll
      </methodName>
      <methodSignature>
        (Ljava/util/Collection&lt;+TT;&gt;;)Z
      </methodSignature>
      <fullMethod>
        public final  boolean addAll(java.util.Collection&lt;? extends T&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        findResources
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Enumeration&lt;Ljava/net/URL;&gt;;
      </methodSignature>
      <fullMethod>
        protected  java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        DOMDescriptor
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.String, java.util.Map&lt;java.lang.String, java.lang.String&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        DOMDescriptor
      </className>
      <methodName>
        getDOMUpdateSite
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getDOMUpdateSite()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Shell;Ljava/lang/String;Ljava/lang/String;Lorg/eclipse/core/runtime/IStatus;I)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(org.eclipse.swt.widgets.Shell, java.lang.String, java.lang.String, org.eclipse.core.runtime.IStatus, int)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        createDialogAndButtonArea
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/Composite;)V
      </methodSignature>
      <fullMethod>
        protected  void createDialogAndButtonArea(org.eclipse.swt.widgets.Composite)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        getStackTrace
      </methodName>
      <methodSignature>
        (Ljava/lang/Throwable;)Ljava/util/List&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        private  java.util.List&lt;java.lang.String&gt; getStackTrace(java.lang.Throwable)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        repopulateList
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void repopulateList()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        setStatus
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IStatus;)V
      </methodSignature>
      <fullMethod>
        protected final  void setStatus(org.eclipse.core.runtime.IStatus)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        shouldShowDetailsButton
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        protected  boolean shouldShowDetailsButton()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin$1
      </className>
      <methodName>
        propertyChange
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/util/PropertyChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void propertyChange(org.eclipse.jface.util.PropertyChangeEvent)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        addReexportedBundles
      </methodName>
      <methodSignature>
        (Ljava/util/Set&lt;Ljava/lang/String;&gt;;Lorg/eclipse/osgi/service/resolver/BundleDescription;)V
      </methodSignature>
      <fullMethod>
        private static  void addReexportedBundles(java.util.Set&lt;java.lang.String&gt;, org.eclipse.osgi.service.resolver.BundleDescription)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        GroovyMonkeyPlugin
      </className>
      <methodName>
        getAllReexportedBundles
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllReexportedBundles(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        exec
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/jobs/Job;)V
      </methodSignature>
      <fullMethod>
        private  void exec(org.eclipse.core.runtime.jobs.Job)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        join
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/jobs/Job;)V
      </methodSignature>
      <fullMethod>
        private  void join(org.eclipse.core.runtime.jobs.Job)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object run()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata$2
      </className>
      <methodName>
        runInWorkspace
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IProgressMonitor;)Lorg/eclipse/core/runtime/IStatus;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.runtime.IStatus runInWorkspace(org.eclipse.core.runtime.IProgressMonitor)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        containsDOMByPlugin
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Z
      </methodSignature>
      <fullMethod>
        public  boolean containsDOMByPlugin(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getDOMByPlugin
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lnet/sf/groovyMonkey/DOMDescriptor;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.DOMDescriptor getDOMByPlugin(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setExecMode
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setExecMode(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setJobMode
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setJobMode(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription$ResourceChangeListener$1
      </className>
      <methodName>
        visit
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResourceDelta;)Z
      </methodSignature>
      <fullMethod>
        public  boolean visit(org.eclipse.core.resources.IResourceDelta)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription$ResourceChangeListener
      </className>
      <methodName>
        resourceChanged
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResourceChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void resourceChanged(org.eclipse.core.resources.IResourceChangeEvent)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener$2
      </className>
      <methodName>
        visit
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResource;)Z
      </methodSignature>
      <fullMethod>
        public  boolean visit(org.eclipse.core.resources.IResource)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener
      </className>
      <methodName>
        rescanAllFiles
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void rescanAllFiles()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        CreateGroovyMonkeyExamplesAction
      </className>
      <methodName>
        findEntries
      </methodName>
      <methodSignature>
        (Lorg/osgi/framework/Bundle;Ljava/util/List&lt;Ljava/net/URL;&gt;;Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        private  void findEntries(org.osgi.framework.Bundle, java.util.List&lt;java.net.URL&gt;, java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        getDestinationFor
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;)Lorg/eclipse/core/resources/IFolder;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.core.resources.IFolder getDestinationFor(net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        getProject
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResource;)Lorg/eclipse/core/resources/IProject;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.core.resources.IProject getProject(org.eclipse.core.resources.IResource)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;)V
      </methodSignature>
      <fullMethod>
        public  void run(org.eclipse.jface.action.IAction)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;)V
      </methodSignature>
      <fullMethod>
        public  void run(org.eclipse.jface.action.IAction)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$Association
      </className>
      <methodName>
        compareTo
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction$Association;)I
      </methodSignature>
      <fullMethod>
        public  int compareTo(net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction$Association)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        createMenuFromMetadatas
      </methodName>
      <methodSignature>
        (Ljava/util/Collection&lt;Lnet/sf/groovyMonkey/ScriptMetadata;&gt;;)Ljava/util/List&lt;Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction$Association;&gt;;
      </methodSignature>
      <fullMethod>
        private  java.util.List&lt;net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction$Association&gt; createMenuFromMetadatas(java.util.Collection&lt;net.sf.groovyMonkey.ScriptMetadata&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        editAction
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)Lorg/eclipse/jface/action/Action;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.jface.action.Action editAction(java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        menuAction
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)Lorg/eclipse/jface/action/Action;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.jface.action.Action menuAction(java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        closeEditor
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public static  void closeEditor(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getAllAvailableBundles
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getAllAvailableBundles()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getExtensionGlobalVariables
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;)Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;java.lang.String, java.lang.Object&gt; getExtensionGlobalVariables(net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        hasDOM
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Z
      </methodSignature>
      <fullMethod>
        public static  boolean hasDOM(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        setContents
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public static  void setContents(java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        File
      </className>
      <methodName>
        removeMyTasks
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void removeMyTasks(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        addIncludes
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/MonkeyClassLoader;Lnet/sf/groovyMonkey/ScriptMetadata;)V
      </methodSignature>
      <fullMethod>
        public static  void addIncludes(net.sf.groovyMonkey.MonkeyClassLoader, net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        getIncludes
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;)Ljava/util/List&lt;Ljava/net/URL;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;java.net.URL&gt; getIncludes(net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        array
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; array&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        linked
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; linked&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        list
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; list&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        treeList
      </methodName>
      <methodSignature>
        &lt;T::Ljava/lang/Comparable&lt;TT;&gt;;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; treeList&lt;T extends java.lang.Comparable&lt;T&gt;&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        ListUtil
      </className>
      <methodName>
        vector
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/List&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;T&gt; vector&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        hashSet
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; hashSet&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        linkedSet
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; linkedSet&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        set
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; set&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        SetUtil
      </className>
      <methodName>
        treeSet
      </methodName>
      <methodSignature>
        &lt;T:Ljava/lang/Object;&gt;(Ljava/util/Collection&lt;TT;&gt;;)Ljava/util/Set&lt;TT;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;T&gt; treeSet&lt;T&gt;(java.util.Collection&lt;T&gt;)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        StringUtil
      </className>
      <methodName>
        removeFirst
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String removeFirst(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        askBundles
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/Class&lt;*&gt;;
      </methodSignature>
      <fullMethod>
        private  java.lang.Class&lt;?&gt; askBundles(java.lang.String)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        BundleClassLoaderAdapter
      </className>
      <methodName>
        findResource
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/net/URL;
      </methodSignature>
      <fullMethod>
        protected  java.net.URL findResource(java.lang.String)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        DOMDescriptor
      </className>
      <methodName>
        compareTo
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/DOMDescriptor;)I
      </methodSignature>
      <fullMethod>
        public  int compareTo(net.sf.groovyMonkey.DOMDescriptor)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        DOMDescriptor
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        getImage
      </methodName>
      <methodSignature>
        ()Lorg/eclipse/swt/graphics/Image;
      </methodSignature>
      <fullMethod>
        protected  org.eclipse.swt.graphics.Image getImage()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        showDetailsArea
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected final  void showDetailsArea()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Marker
      </className>
      <methodName>
        marker
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/Tags$Type;ILjava/lang/String;[I)Lnet/sf/groovyMonkey/Marker;
      </methodSignature>
      <fullMethod>
        private static  net.sf.groovyMonkey.Marker marker(net.sf.groovyMonkey.Tags$Type, int, java.lang.String, int[])
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getScriptPath
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getScriptPath()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        launchUpdateInstaller
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata$URLtoPluginMap;)V
      </methodSignature>
      <fullMethod>
        private  void launchUpdateInstaller(net.sf.groovyMonkey.ScriptMetadata$URLtoPluginMap)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        notifyMissingDOMs
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        private  java.lang.String notifyMissingDOMs(java.lang.String)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        highlightNewScriptInNavigator
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        private  void highlightNewScriptInNavigator(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PublishScript
      </className>
      <methodName>
        getScripts
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Lorg/eclipse/core/resources/IFile;&gt;;
      </methodSignature>
      <fullMethod>
        protected  java.util.List&lt;org.eclipse.core.resources.IFile&gt; getScripts()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        addNestedMenuAction
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction$MonkeyMenuStruct;Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        private  void addNestedMenuAction(net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction$MonkeyMenuStruct, java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        addNestedMenuEditAction
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction$MonkeyMenuStruct;Ljava/lang/String;Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        private  void addNestedMenuEditAction(net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction$MonkeyMenuStruct, java.lang.String, org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        getAllMetadatas
      </methodName>
      <methodSignature>
        ()Ljava/util/List&lt;Lnet/sf/groovyMonkey/ScriptMetadata;&gt;;
      </methodSignature>
      <fullMethod>
        private  java.util.List&lt;net.sf.groovyMonkey.ScriptMetadata&gt; getAllMetadatas()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        createFolder
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFolder;)V
      </methodSignature>
      <fullMethod>
        public static  void createFolder(org.eclipse.core.resources.IFolder)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getDOMPlugins
      </methodName>
      <methodSignature>
        ()Ljava/util/Set&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Set&lt;java.lang.String&gt; getDOMPlugins()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        getBundles
      </methodName>
      <methodSignature>
        ([Ljava/lang/String;)Ljava/util/List&lt;Lorg/osgi/framework/Bundle;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;org.osgi.framework.Bundle&gt; getBundles(java.lang.String[])
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        setBinding
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void setBinding()
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        shouldDisplay
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IStatus;I)Z
      </methodSignature>
      <fullMethod>
        protected static  boolean shouldDisplay(org.eclipse.core.runtime.IStatus, int)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        findResource
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/net/URL;
      </methodSignature>
      <fullMethod>
        protected  java.net.URL findResource(java.lang.String)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        getScriptFactories
      </methodName>
      <methodSignature>
        ()Ljava/util/Map&lt;Ljava/lang/String;Lnet/sf/groovyMonkey/lang/IMonkeyScriptFactory;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;java.lang.String, net.sf.groovyMonkey.lang.IMonkeyScriptFactory&gt; getScriptFactories()
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        RunMonkeyScript
      </className>
      <methodName>
        runScript
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        private  java.lang.Object runScript()
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getReasonableFilename
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        private  java.lang.String getReasonableFilename()
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        Subscription$ResourceChangeListener
      </className>
      <methodName>
        checkFilter
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResourceChangeEvent;)Z
      </methodSignature>
      <fullMethod>
        public  boolean checkFilter(org.eclipse.core.resources.IResourceChangeEvent)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        CreateGroovyMonkeyExamplesAction
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/action/IAction;)V
      </methodSignature>
      <fullMethod>
        public  void run(org.eclipse.jface.action.IAction)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        setBinding
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;)Lnet/sf/groovyMonkey/lang/IMonkeyScript;
      </methodSignature>
      <fullMethod>
        public  net.sf.groovyMonkey.lang.IMonkeyScript setBinding(net.sf.groovyMonkey.ScriptMetadata, java.util.Map&lt;java.lang.String, java.lang.Object&gt;)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        populateCopyBuffer
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/runtime/IStatus;Ljava/lang/StringBuffer;I)V
      </methodSignature>
      <fullMethod>
        private  void populateCopyBuffer(org.eclipse.core.runtime.IStatus, java.lang.StringBuffer, int)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        findClass
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/Class&lt;*&gt;;
      </methodSignature>
      <fullMethod>
        protected  java.lang.Class&lt;?&gt; findClass(java.lang.String)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        loadClass
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/Class&lt;*&gt;;
      </methodSignature>
      <fullMethod>
        public  java.lang.Class&lt;?&gt; loadClass(java.lang.String)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        loadClass
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Z)Ljava/lang/Class&lt;*&gt;;
      </methodSignature>
      <fullMethod>
        protected synchronized  java.lang.Class&lt;?&gt; loadClass(java.lang.String, boolean)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getMetadataLines
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/List&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;java.lang.String&gt; getMetadataLines(java.lang.String)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        refreshScriptMetadata
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;Lnet/sf/groovyMonkey/ScriptMetadata;Z)V
      </methodSignature>
      <fullMethod>
        public static  void refreshScriptMetadata(org.eclipse.core.resources.IFile, net.sf.groovyMonkey.ScriptMetadata, boolean)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        stripMetadata
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String stripMetadata(java.lang.String)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        findDestinationFor
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;)Lorg/eclipse/core/resources/IFolder;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.core.resources.IFolder findDestinationFor(net.sf.groovyMonkey.ScriptMetadata)
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.lang
      </package>
      <className>
        MonkeyScript
      </className>
      <methodName>
        run
      </methodName>
      <methodSignature>
        ()Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  java.lang.Object run()
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        MonkeyClassLoader
      </className>
      <methodName>
        findResources
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Enumeration&lt;Ljava/net/URL;&gt;;
      </methodSignature>
      <fullMethod>
        protected  java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        ensureDomsAreLoaded
      </methodName>
      <methodSignature>
        (Lorg/eclipse/ui/IWorkbenchWindow;)Z
      </methodSignature>
      <fullMethod>
        public  boolean ensureDomsAreLoaded(org.eclipse.ui.IWorkbenchWindow)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        setMarkers
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFile;)V
      </methodSignature>
      <fullMethod>
        public static  void setMarkers(org.eclipse.core.resources.IFile)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction
      </className>
      <methodName>
        createTheMenu
      </methodName>
      <methodSignature>
        (Ljava/util/List&lt;Lnet/sf/groovyMonkey/actions/RecreateMonkeyMenuAction$Association;&gt;;Lorg/eclipse/jface/action/IAction;)V
      </methodSignature>
      <fullMethod>
        private  void createTheMenu(java.util.List&lt;net.sf.groovyMonkey.actions.RecreateMonkeyMenuAction$Association&gt;, org.eclipse.jface.action.IAction)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getDOM
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;java.lang.String, java.lang.Object&gt; getDOM(java.lang.String)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getExtensionGlobalVariables
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/ScriptMetadata;Lorg/eclipse/core/runtime/IExtensionPoint;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;)V
      </methodSignature>
      <fullMethod>
        private static  void getExtensionGlobalVariables(net.sf.groovyMonkey.ScriptMetadata, org.eclipse.core.runtime.IExtensionPoint, java.util.Map&lt;java.lang.String, java.lang.Object&gt;)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getUpdateSiteForDOMPlugin
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String getUpdateSiteForDOMPlugin(java.lang.String)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        MapUtil
      </className>
      <methodName>
        entries
      </methodName>
      <methodSignature>
        &lt;K:Ljava/lang/Object;V:Ljava/lang/Object;&gt;(Ljava/util/List&lt;TK;&gt;;Ljava/util/List&lt;TV;&gt;;)Ljava/util/List&lt;Ljava/util/Map$Entry&lt;TK;TV;&gt;;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.List&lt;java.util.Map$Entry&lt;K, V&gt;&gt; entries&lt;K, V&gt;(java.util.List&lt;K&gt;, java.util.List&lt;V&gt;)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.util
      </package>
      <className>
        TreeList
      </className>
      <methodName>
        add
      </methodName>
      <methodSignature>
        (TT;)Z
      </methodSignature>
      <fullMethod>
        public final  boolean add(T)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        extractScriptsFromText
      </methodName>
      <methodSignature>
        (Lnet/sf/groovyMonkey/actions/PasteScriptFromClipboardAction$TextAndRTF;)Ljava/util/List&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        private  java.util.List&lt;java.lang.String&gt; extractScriptsFromText(net.sf.groovyMonkey.actions.PasteScriptFromClipboardAction$TextAndRTF)
      </fullMethod>
      <crap>
        72.00
      </crap>
      <complexity>
        8
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        8
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        RecreateMonkeyMenuAction$Association
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        72.00
      </crap>
      <complexity>
        8
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        8
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        SelectScriptPathDialog
      </className>
      <methodName>
        selectionChanged
      </methodName>
      <methodSignature>
        (Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V
      </methodSignature>
      <fullMethod>
        public  void selectionChanged(org.eclipse.jface.viewers.SelectionChangedEvent)
      </fullMethod>
      <crap>
        72.00
      </crap>
      <complexity>
        8
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        8
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom
      </package>
      <className>
        Utilities
      </className>
      <methodName>
        getDOMInfo
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Class&lt;*&gt;;&gt;;
      </methodSignature>
      <fullMethod>
        public static  java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt; getDOMInfo(java.lang.String)
      </fullMethod>
      <crap>
        72.00
      </crap>
      <complexity>
        8
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        8
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.dom.resources
      </package>
      <className>
        Resources
      </className>
      <methodName>
        walk
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResource;Ljava/util/regex/Pattern;Ljava/util/Collection&lt;Ljava/lang/Object;&gt;;)V
      </methodSignature>
      <fullMethod>
        private  void walk(org.eclipse.core.resources.IResource, java.util.regex.Pattern, java.util.Collection&lt;java.lang.Object&gt;)
      </fullMethod>
      <crap>
        72.00
      </crap>
      <complexity>
        8
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        8
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        PasteScriptFromClipboardAction
      </className>
      <methodName>
        createScriptFile
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IFolder;Lnet/sf/groovyMonkey/ScriptMetadata;Ljava/lang/String;)Lorg/eclipse/core/resources/IFile;
      </methodSignature>
      <fullMethod>
        private  org.eclipse.core.resources.IFile createScriptFile(org.eclipse.core.resources.IFolder, net.sf.groovyMonkey.ScriptMetadata, java.lang.String)
      </fullMethod>
      <crap>
        110.00
      </crap>
      <complexity>
        10
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        10
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        UpdateMonkeyActionsResourceChangeListener$1
      </className>
      <methodName>
        visit
      </methodName>
      <methodSignature>
        (Lorg/eclipse/core/resources/IResourceDelta;)Z
      </methodSignature>
      <fullMethod>
        public  boolean visit(org.eclipse.core.resources.IResourceDelta)
      </fullMethod>
      <crap>
        132.00
      </crap>
      <complexity>
        11
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        11
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        toHeader
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toHeader()
      </fullMethod>
      <crap>
        156.00
      </crap>
      <complexity>
        12
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        12
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey.actions
      </package>
      <className>
        SelectScriptPathDialog$Validator
      </className>
      <methodName>
        validate
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)Lorg/eclipse/core/runtime/IStatus;
      </methodSignature>
      <fullMethod>
        public  org.eclipse.core.runtime.IStatus validate(java.lang.Object[])
      </fullMethod>
      <crap>
        182.00
      </crap>
      <complexity>
        13
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        13
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ErrorDialog
      </className>
      <methodName>
        populateList
      </methodName>
      <methodSignature>
        (Lorg/eclipse/swt/widgets/List;Lorg/eclipse/core/runtime/IStatus;IZ)V
      </methodSignature>
      <fullMethod>
        private  void populateList(org.eclipse.swt.widgets.List, org.eclipse.core.runtime.IStatus, int, boolean)
      </fullMethod>
      <crap>
        210.00
      </crap>
      <complexity>
        14
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        14
      </crapLoad>
    </method>
    <method>
      <package>
        net.sf.groovyMonkey
      </package>
      <className>
        ScriptMetadata
      </className>
      <methodName>
        getScriptMetadata
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lnet/sf/groovyMonkey/ScriptMetadata;
      </methodSignature>
      <fullMethod>
        public static  net.sf.groovyMonkey.ScriptMetadata getScriptMetadata(java.lang.String)
      </fullMethod>
      <crap>
        552.00
      </crap>
      <complexity>
        23
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        23
      </crapLoad>
    </method>
  </methods>
</crap_result>
